# 1. 按照volc命令行工具
# 2. volc ml_task submit --conf=./scripts/train.yaml
# 自定义训练任务名称
TaskName: "embedding"
# 自定义训练任务描述
Description: ""
# 运行入口命令
Entrypoint: "/root/miniconda3/envs/embedding/bin/accelerate launch --config_file /root/.cache/huggingface/accelerate/default_config.yaml /fs-computility/llm/chenzhi/InternEmbedding/run.py train --pool_type=eos --gradcache_chunk_size=10 --temperature=0.02 --learning_rate=3e-5 --batch_size_per_gpu=600 --embedder_name=mistral_filter18"
# 标签
Tags: [] 
# # 待上传代码的本地路径, 如是目录且以 '/' 结尾, 则将该目录下的所有内容上传到 RemoteMountCodePath,
# # 如是目录且不以 '/' 结尾, 则将该目录及该目录下所有内容上传到 RemoteMountCodePath
# UserCodePath: "../InternEmbedding/"
# # 容器中的代码挂载路径
# RemoteMountCodePath: "/fs-computility/llm/chenzhi/InternEmbedding/"
# 环境变量
Envs: []
# 镜像 URL 地址, 执行任务时, 会自动下载该地址的镜像并使用
ImageUrl: "fs-computility-cn-shanghai.cr.volces.com/devinstance-archive/embedding:v4"
# 提交到火山引擎机器学习平台的某个队列 ID, 可以访问https://console.volcengine.com/ml-platform/resourceQueue 查看有权限的队列
ResourceQueueID : "q-20240114171437-h89zl"
# 训练框架，支持：TensorFlowPS, PyTorchDDP, Horvod, BytePS, Custom
Framework: "Custom"
# 实例配置, 包含角色名称(RoleName), 角色数量(RoleReplicas)以及具体的实例规格(Flavor)：2机4卡
TaskRoleSpecs:
  - RoleName: "worker"
    RoleReplicas: 1
    Flavor: "ml.hpcpni2l.28xlarge"
# 该自定义任务最长运行时间, 支持 1h, 2h45m, 30s 等方式表达时间段, 如未带单位, 则默认单位为秒
ActiveDeadlineSeconds: 240h
# 是否开启 TensorBoard. 如需开启, 则可以反注释下方配置. 同时需将 TensorBoard 数据写入训练容器预置的环境变量($TENSORBOARD_LOG_PATH)下
EnableTensorBoard: False
# 挂载分布式数据盘至训练容器中, 支持 Tos, vePFS 等数据盘挂载方式
Storages:
  - Type: "Vepfs"
    VepfsId: "vepfs-cnsh04f89ec802c7"                      # 若在平台挂载了两个Vepfs实例，则需要指定对应VePFS实例ID；只有一个实例时，可以为空
    MountPath: "/fs-computility/llm/chenzhi"                        # 容器中的挂载目录
    SubPath: "llm/chenzhi"
  - Type: "Vepfs"
    VepfsId: "vepfs-cnsh04f89ec802c7"                      # 若在平台挂载了两个Vepfs实例，则需要指定对应VePFS实例ID；只有一个实例时，可以为空
    MountPath: "/fs-computility/llm/shared"                        # 容器中的挂载目录
    SubPath: "llm/shared"
    # MountPath: "/fs-computility/llm/chenzhi"  # 在分布式训练容器中挂载的路径
    # Bucket: "repleace_with_your_tos_bucket" # 可访问的 tos 下某个具体的 bucket 名字, 例如: default_bucket